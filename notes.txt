handle overflow

one philosopher is gonna only have one fork, so just sleep the time to die and kill him

◦ timestamp_in_ms X has taken a fork
◦ timestamp_in_ms X is eating
◦ timestamp_in_ms X is sleeping
◦ timestamp_in_ms X is thinking
◦ timestamp_in_ms X died

- put odd ones to sleep before while loop
- make while loop check if someone died
- grab forks for even ones
- eat 
- drop the forks
- if everyones alive sleep
- if still alive think
- then check for deaths and loop
- the loop should let the odd ones wake up and eat when the forks are free

- when someone wakes up check if theyre dead no no no no
- if someones dead stop, at any point
- always check if everyones alive

steps
- put odd to sleep before loop (loop stays true if everyones alive)
- take forks whoevers awake
- eat and keep checking if alive
- once theyre done eating drop forks and sleep 
- once done sleeping think and look for forks
- i think print thinking then restart the loop and look for forks
- for forks keep them in a loop of checking if both forks are available, if not sleep(100) and look again??
- ADD ALIVE OR DEAD VARIABLE IN PHILOS!!
- STOP EATING WHEN MEALS FULL!!!!!!!!!!!!!!


questions
- when does it end? when everyones had the meals they need? when dead also ofcourse
- if someone dies mid sleep stop everything
- death timestamp should be the same as ttd (like for ./philosophers 5 200 800 200)


usage : ./philosophers [number_of_philosophers] 
						[time_to_die] 
						[time_to_eat] 
						[time_to_sleep] 
						(optional)[number_of_times_each_philosopher_must_eat]

./philo "5 800 200 200"
./philo "5 800" "200 200"
./philo 5 8a 200 200

before submitting 
- remove fsanitize
- check norm 
- check ./philo 4 310 200 100